version: '3.8'

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    environment:
      POSTGRES_DB: academy
      POSTGRES_USER: academy_user
      POSTGRES_PASSWORD: 20031956tAA

  frontend:
    image: y4r1k/academy-frontend:latest
    ports:
      - "3000:3000"
    volumes:
      - frontend_build:/app/result_build/
    environment:
      NODE_ENV: production
    restart: always
    depends_on:
      - db
  backend:
    image: y4r1k/academy-backend:latest
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - static_value:/app/backend_static/
      - media_value:/app/backend_media/
    env_file: .env
    depends_on:
      - db
  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - www-html:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - etc-letsencrypt:/etc/letsencrypt
      - frontend_build:/usr/share/nginx/html/
      - static_value:/var/html/backend_static/
      - media_value:/var/html/backend_media/
    restart: always
    depends_on:
      - backend
      - frontend
  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    volumes:
      - etc-letsencrypt:/etc/letsencrypt
      - www-html:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email real-man228@yandex.ru --agree-tos --no-eff-email --staging -d frantsuz.ru

volumes:
  postgres_data:
  static_value:
  media_value:
  frontend_build:
  www-html:
  etc-letsencrypt: