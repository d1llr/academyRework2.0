name: Academy workflow

on: push

jobs:
    tests:
      name: Test Project
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main'
      steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.8
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip3 install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
            pip install -r backend/requirements.txt
        - name: Test with flake8
          run: |
            python -m flake8
    build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      if: github.ref == 'refs/heads/main'
      steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub backend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/academy-backend:latest
          context: backend
          file: backend/Dockerfile
      - name: Push to Docker Hub frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/academy-frontend:latest
          context: frontend
          file: frontend/Dockerfile
    deploy:
      name: Deploy to Server
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      if: github.ref == 'refs/heads/main'
      steps:
        - name: Executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSPHRASE }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              cd academy/
              sudo docker container stop root-backend-1
              sudo docker container stop root-frontend-1
              sudo docker container rm root-backend-1
              sudo docker container rm root-frontend-1
              sudo docker image rm ${{secrets.DOCKER_USERNAME }}/academy-backend
              sudo docker image rm ${{secrets.DOCKER_USERNAME }}/academy-frontend
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/academy-frontend:latest
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/academy-backend:latest
              sudo docker-compose up -d
              sudo docker-compose exec -T backend python manage.py makemigrations
              sudo docker-compose exec -T backend python manage.py migrate --noinput
              sudo docker-compose exec -T backend python manage.py collectstatic --no-input
    send_message:
      name: Send message to Telegram
      runs-on: ubuntu-latest
      needs: deploy
      if: github.ref == 'refs/heads/main'
      steps:
        - name: send message
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            message: ${{ github.workflow }} успешно выполнен!